name: Test build multiarch
on:
  push:
  workflow_dispatch:

jobs:
  build:
    name: Build multi-architecture image
    runs-on: ubuntu-20.04

    steps:
      - run: |
          cat > entrypoint.sh<<EOF
          #!/usr/bin/env bash

          echo -n "Machine: "
          uname -m
          echo -n "Bits: "
          getconf LONG_BIT
          echo "goodbye world"
          EOF

      - name: Build amd64 image
        run: |
          buildah from docker.io/amd64/alpine:3.14
          buildah config --entrypoint ./entrypoint.sh --port 8080 --arch amd64 --workingdir . alpine-working-container
          buildah commit --format docker --squash alpine-working-container test-multiarch:amd64

      - name: Build arm64v8 image
        run: |
          buildah from docker.io/arm64v8/alpine:3.14
          buildah config --entrypoint ./entrypoint.sh --port 8080 --arch arm64v8 --workingdir . alpine-working-container-1
          buildah commit --format docker --squash alpine-working-container-1 test-multiarch:arm64v8

      - run: buildah images

      - name: Add to manifest
        run: |
          buildah manifest create test-multiarch
          buildah manifest add test-multiarch test-multiarch:amd64
          buildah manifest add test-multiarch test-multiarch:amd64
          buildah manifest add test-multiarch test-multiarch:arm64v8

      - run: buildah manifest inspect test-multiarch

      - run: buildah manifest push test-multiarch:latest docker://docker.io/diagrawa/test-multiarch:latest --creds diagrawa:${{ secrets.REGISTRY_PASSWORD }} --all
